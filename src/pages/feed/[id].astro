---
import Layout from "../../layouts/Layout.astro";
import { fetchFeedsData } from "../../data/parser";
import { getFeedList } from "../../lib/api/fetchFeeds";
import { getDates } from "../../lib/utils/dates";
import { FeedDataType, type Feed, type FeedItem } from "../../lib/utils/types";
import sort from "../../lib/utils/sortFeedsOrFeedItems";

import dayjs from "dayjs";
import LocalizedFormat from "dayjs/plugin/localizedFormat";

dayjs.extend(LocalizedFormat);

export async function getStaticPaths() {
    try {
        const res = await getFeedList();
        const { data } = JSON.parse(res);
        const feeds = await fetchFeedsData(data as { id: string; url: string }[]);

        const feedPathAndPageProp: Record<string, Record<string, any>>[] = feeds.map(
            (fl) => {
                return {
                    params: {
                        id: fl.id,
                    },
                    props: {
                        feed: feeds.filter((f) => f.id === fl.id)[0],
                        feedList: data
                    },
                };
            }
        );

        return feedPathAndPageProp
            ? feedPathAndPageProp
            : [
                  {
                      params: {
                          id: "404",
                      },
                      props: {
                          feed: null,
                          feedList: data
                      },
                  },
              ];
    } catch (error) {
        console.log(error);
        return [
            {
                params: {
                    id: "404",
                },
                props: {
                    feed: null,
                    feedList: []
                },
            },
        ];
    }
}

const { feed, feedList } = Astro.props;
sort(feed, FeedDataType.FEED_ITEM);
const { lastUpdated } = getDates(feed, FeedDataType.FEED);

---

<Layout title=`Feed - ${feed ? feed.title : "Not Found"} - rssed` totalFeedCount={feedList.length}>
    <div id="feed_content" data-feed-id={feed.id} data-last-published-time={lastUpdated}>
        <div>
            <hr class="design_element" />
            <h2>{feed ? feed.title : "feed not found!"}</h2>
            <p>{feed && "Posts"}</p>
        </div>
        {
            feed && feed.items.length !== 0 ? (
                feed.items.map((item: FeedItem) => {
                    const description =
                        item.contentSnippet ||
                        item.summary ||
                        item.content ||
                        item["content:encodedSnippet"] ||
                        item["content:encoded"];
                    return (
                        <div class="post">
                            <h3>
                                {
                                    item.title ? (
                                        <a href={item.link} target="_blank" rel="noopener noreferrer">
                                            {item.title}
                                        </a>
                                        <>
                                            ðŸ”—
                                        </>
                                    ) : (
                                        <a href={item.link} target="_blank" rel="noopener noreferrer">
                                            {
                                                dayjs(item.pubDate).format('LLL')
                                            }
                                        </a>
                                    )
                                }
                            </h3>
                            {description && (
                                <p>
                                    {`${description.substring(0, 150)} `}
                                    <a href={item.link}>[...]</a>
                                </p>
                            )}
                        </div>
                    );
                })
            ) : (
                <p>No posts found.</p>
            )
        }
    </div>
</Layout>

<style>
    .design_element {
        width: 3rem;
        background-color: rgba(201, 125, 96, 0.3);
        height: 0.2rem;
        outline: none;
        border: none;
        margin-bottom: 0.5rem;
    }
    #feed_content {
        display: flex;
        flex-direction: column;
        justify-content: center;
        gap: 2rem;
    }

    .post {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        padding: 1rem;
        border: 0.3rem solid rgba(201, 125, 96, 0.3);
        border-radius: 1rem;
    }
</style>

<script>
    const { feedId, lastPublishedTime } = (document.querySelector("#feed_content") as HTMLElement)
        .dataset;
    localStorage.setItem(
        feedId as string,
        JSON.stringify({
            read: true,
            timestamp: new Date(lastPublishedTime as string).getTime(),
        })
    );
</script>
