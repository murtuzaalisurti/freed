---
import "@fontsource-variable/montserrat";
import "@fontsource-variable/rubik";

interface Props {
    title: string;
    totalFeedCount: number;
}

const { title, totalFeedCount } = Astro.props;
---

<!doctype html>
<html lang="en">
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <meta name="generator" content={Astro.generator} />
        <meta name="author" content="Murtuzaali Surti" />
        <meta
            name="description"
            content="a collection of dev rss feeds - blogroll"
        />
        <meta property="og:title" content={title} />
        <meta
            property="og:description"
            content="a collection of dev rss feeds - blogroll"
        />
        <meta property="og:image" content="/assets/rssedOg.jpg" />
        <meta
            property="og:image:secure_url"
            content="https://rssed.netlify.app/assets/rssedOg.jpg"
        />
        <title data-pagefind-meta="title">{title}</title>
    </head>
    <body>
        <back-to-top>
            <a class="back-to-top-fallback" href="#">
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m18 15-6-6-6 6"/></svg>
            </a>
            <template>
                <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><path d="m18 15-6-6-6 6"/></svg>
            </template>
        </back-to-top>
        <header>
            <h1>
                <a style={{ textDecoration: "none" }} href="/">rssed</a>
            </h1>
            <p>a collection of dev rss feeds - blogroll</p>
            <div class="add_new_feed">
                <a
                    href="https://github.com/murtuzaalisurti/rssed/issues/new?assignees=&labels=feed&projects=&template=new_feed.yml&title=%5BFEED%5D%3A+"
                    target="_blank"
                >
                    <p>
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            style="display: inline;"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="lucide lucide-github"
                            ><path
                                d="M15 22v-4a4.8 4.8 0 0 0-1-3.5c3 0 6-2 6-5.5.08-1.25-.27-2.48-1-3.5.28-1.15.28-2.35 0-3.5 0 0-1 0-3 1.5-2.64-.5-5.36-.5-8 0C6 2 5 2 5 2c-.3 1.15-.3 2.35 0 3.5A5.403 5.403 0 0 0 4 9c0 3.5 3 5.5 6 5.5-.39.49-.68 1.05-.85 1.65-.17.6-.22 1.23-.15 1.85v4"
                            ></path><path d="M9 18c-4.51 2-5-2-7-2"></path></svg
                        >
                        Add a new feed
                        <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="24"
                            height="24"
                            viewBox="0 0 24 24"
                            fill="none"
                            stroke="currentColor"
                            stroke-width="2"
                            stroke-linecap="round"
                            stroke-linejoin="round"
                            class="lucide lucide-external-link"
                            ><path d="M15 3h6v6"></path><path d="M10 14 21 3"
                            ></path><path
                                d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                            ></path></svg
                        >
                    </p>
                </a>
                {
                    totalFeedCount > 0 && (
                        <p>+</p>
                        <p>{totalFeedCount} feeds</p>
                    )
                }
            </div>
        </header>
        <main>
            <slot />
        </main>
        <footer>
            <p>
                Made with ‚ù§ by <a href="https://murtuzaalisurti.github.io"
                    >Murtuza</a
                >.
            </p>
        </footer>
    </body>
</html>

<style is:global>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    html {
        scroll-behavior: smooth;
    }

    body::-webkit-scrollbar {
        width: 0.5rem;
    }

    body::-webkit-scrollbar-track {
        background-color: var(--background-color);
    }

    body::-webkit-scrollbar-thumb {
        background-color: var(--text-color);
        border-radius: 0.7rem;
    }

    ::selection {
        background-color: var(--text-color);
        color: var(--background-color);
    }

    /* Browsers without `::-webkit-scrollbar-*` support */
    @supports (not selector(::-webkit-scrollbar)) {
        html {
            scrollbar-color: #f2e5d7 #262322;
            scrollbar-width: thin;
        }
    }

    body {
        --background-color: #262322;
        --text-color: #f2e5d7;
        --button-hover: #443632;
        color: var(--text-color);
        background-color: var(--background-color);
        display: flex;
        flex-direction: column;
        align-items: center;
        font-family:
            "Rubik Variable",
            system-ui,
            -apple-system,
            BlinkMacSystemFont,
            "Segoe UI",
            Roboto,
            Helvetica,
            Arial,
            sans-serif,
            "Apple Color Emoji",
            "Segoe UI Emoji",
            "Segoe UI Symbol";
    }

    a {
        font: inherit;
        color: var(--text-color);
    }

    main,
    header {
        width: 90%;
        max-width: 40rem;
        padding: 2rem 0;
    }

    header {
        padding: 2rem 0 1rem 0;
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        font-family: "Montserrat Variable", sans-serif;
        text-wrap: balance;
        line-height: 1.5;
    }

    img,
    picture,
    video,
    canvas,
    svg {
        display: block;
        max-width: 100%;
    }

    p,
    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
        overflow-wrap: break-word;
    }

    p {
        opacity: 0.75;
        line-height: 1.3;
    }

    footer {
        text-align: center;
        padding: 2rem;
    }

    h3 {
        font-size: 1.35rem;
    }

    .back-to-top, a.back-to-top-fallback {
        bottom: 3rem;
        right: 2rem;
        width: 3rem;
        height: 3rem;
        border: none;
        border-radius: 50%;
        background-color: var(--text-color);
        z-index: 10;
        cursor: pointer;
        box-shadow: 0 0 2rem 0.5rem var(--button-hover);
        transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out;
    }

    a.back-to-top-fallback {
        position: fixed;
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: var(--text-color);
    }

    a.back-to-top-fallback svg, .back-to-top svg {
        height: 70%;
        stroke: var(--background-color);
        stroke-width: 3;
        fill: none;
        scale: 1.35;
        transform: translateY(-2%);
    }
</style>

<style>
    .add_new_feed {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin: 1.2rem 0 0 0;
        width: fit-content;
    }

    .add_new_feed a p {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        padding: 0.5rem 1rem;
        background: var(--background-color);
        border: 0.2rem solid rgba(201, 125, 96, 0.3);
        border-radius: 2.5rem;
        opacity: 0.75;
        transition:
            opacity 0.35s,
            background 0.35s;
    }

    .add_new_feed a p:hover {
        opacity: 1;
        background: var(--button-hover);
    }
</style>

<script>
    import.meta.glob("/node_modules/@murtuzaalisurti/back-to-top/public/main.js", { eager: true });
</script>

<script defer is:inline>
    (async () => {
        const pagefind = await import("/pagefind/pagefind.js");
        pagefind.init();

        const results = await (await pagefind.search("release")).results;
        for (const result of results) {
            console.log((await result.data()).meta.title)
            console.log((await result.data()).excerpt)
        }
    })()
</script>